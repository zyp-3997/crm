<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	
	<!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller  -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 启用MVC注解 -->
    <mvc:annotation-driven />
	<context:component-scan base-package="com.neuedu.crm.aop,com.neuedu.crm.controller,com.neuedu.crm.utils,com.neuedu.crm.task,com.neuedu.crm.exception" />
	
	<!-- 设置定时任务 -->
	<task:annotation-driven scheduler="myScheduler" />
	
	<!-- 配置线程池 -->
	<task:scheduler id="myScheduler" pool-size="5" />
    
    <!-- 注册转化器与验证器 -->
    <mvc:annotation-driven conversion-service="conversion-service" />
    <bean id="conversion-service" 
        class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.neuedu.crm.utils.LocalDateTimeConverter" />
                <bean class="com.neuedu.crm.utils.LocalDateConverter" />
            </set>
        </property>
    </bean>
    
    <!-- 配置视图渲染器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <!-- 配置网页存放的路径 -->
        <property name="prefix" value="/pages/" />
        <!-- <property name="prefix" value="/WEB-INF/jsp/" /> -->
        <!-- spring mvc支持多种末班技术，这里使用的是jsp模块 -->
        <property name="suffix" value=".jsp" />
    </bean>
   
    <!-- 配置上传组件 -->
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize">  
            <value>10485760</value>  
        </property>  
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>
    
    <!-- 用于配置网站静态资源，配置后不会被前置控制器拦截，可以直接访问 -->
    <!-- mapping对应URL网站地址，location对应文件在服务器的文件路径 -->
    <mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
    <mvc:resources location="/upload/" mapping="/upload/**"></mvc:resources>
    <mvc:resources location="/images/" mapping="/images/**"></mvc:resources>
    <mvc:resources location="/layui/" mapping="/layui/**"></mvc:resources>
    
    <!-- 拦截器 -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            拦截所有的mvc控制器(操作)
            <mvc:mapping path="/**"/>
            对于不需要拦截的地址，可以使用exclude进行排除
            <mvc:exclude-mapping path="/system/login.action"/>
            <bean class="cn.lingnan.edu.bookstore.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors> -->
    
</beans>