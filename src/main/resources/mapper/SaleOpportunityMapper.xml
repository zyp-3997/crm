<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.crm.mapper.SaleOpportunityMapper">
    <cache/>
  <resultMap id="BaseResultMap" type="com.neuedu.crm.pojo.SaleOpportunity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="success" jdbcType="VARCHAR" property="success" />
    <result column="general" jdbcType="VARCHAR" property="general" />
    <result column="contact_id" jdbcType="INTEGER" property="contactId" />
    <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="creater" jdbcType="INTEGER" property="creater" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
    <result column="allot_date" jdbcType="TIMESTAMP" property="allotDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
    <association property="createrUser" column="creater" javaType="User" select="selectUserById"></association>
    <association property="manager" column="manager_id" javaType="User" select="selectUserById"></association>
    <association property="customer" column="customer_id" javaType="Customer" select="selectCustomerById"></association>
    <association property="linkman" column="contact_id" javaType="Linkman" select="selectLinkmanByPrimaryKey"></association>
  </resultMap>
  
  <select id="selectUserById" parameterType="int" resultType="User">
  	select * from user where id = #{id}
  </select>
  
  <select id="selectCustomerById" parameterType="int" resultType="Customer">
  	select * from customer where id = #{customer_id}
  </select>
  
  <select id="selectLinkmanByPrimaryKey" parameterType="int" resultType="Linkman">
  	select * from linkman where id = #{contact_id}
  </select>
  
  
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_id, `source`, success, `general`, contact_id, contact_phone, description, 
    creater, create_date, manager_id, allot_date, `status`, delete_status
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.crm.pojo.SaleOpportunityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sale_opportunity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sale_opportunity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sale_opportunity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.crm.pojo.SaleOpportunityExample">
    delete from sale_opportunity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.neuedu.crm.pojo.SaleOpportunity" useGeneratedKeys="true">
    insert into sale_opportunity (customer_id, `source`, success, 
      `general`, contact_id, contact_phone, 
      description, creater, create_date, 
      manager_id, allot_date, `status`, 
      delete_status)
    values (#{customerId,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR}, #{success,jdbcType=VARCHAR}, 
      #{general,jdbcType=VARCHAR}, #{contactId,jdbcType=INTEGER}, #{contactPhone,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{creater,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{managerId,jdbcType=INTEGER}, #{allotDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{deleteStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.neuedu.crm.pojo.SaleOpportunity" useGeneratedKeys="true">
    insert into sale_opportunity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="source != null">
        `source`,
      </if>
      <if test="success != null">
        success,
      </if>
      <if test="general != null">
        `general`,
      </if>
      <if test="contactId != null">
        contact_id,
      </if>
      <if test="contactPhone != null">
        contact_phone,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="allotDate != null">
        allot_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="success != null">
        #{success,jdbcType=VARCHAR},
      </if>
      <if test="general != null">
        #{general,jdbcType=VARCHAR},
      </if>
      <if test="contactId != null">
        #{contactId,jdbcType=INTEGER},
      </if>
      <if test="contactPhone != null">
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="allotDate != null">
        #{allotDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.crm.pojo.SaleOpportunityExample" resultType="java.lang.Long">
    select count(*) from sale_opportunity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sale_opportunity
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        `source` = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.success != null">
        success = #{record.success,jdbcType=VARCHAR},
      </if>
      <if test="record.general != null">
        `general` = #{record.general,jdbcType=VARCHAR},
      </if>
      <if test="record.contactId != null">
        contact_id = #{record.contactId,jdbcType=INTEGER},
      </if>
      <if test="record.contactPhone != null">
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null">
        creater = #{record.creater,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=INTEGER},
      </if>
      <if test="record.allotDate != null">
        allot_date = #{record.allotDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteStatus != null">
        delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sale_opportunity
    set id = #{record.id,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      `source` = #{record.source,jdbcType=VARCHAR},
      success = #{record.success,jdbcType=VARCHAR},
      `general` = #{record.general,jdbcType=VARCHAR},
      contact_id = #{record.contactId,jdbcType=INTEGER},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      manager_id = #{record.managerId,jdbcType=INTEGER},
      allot_date = #{record.allotDate,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=VARCHAR},
      delete_status = #{record.deleteStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.crm.pojo.SaleOpportunity">
    update sale_opportunity
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        `source` = #{source,jdbcType=VARCHAR},
      </if>
      <if test="success != null">
        success = #{success,jdbcType=VARCHAR},
      </if>
      <if test="general != null">
        `general` = #{general,jdbcType=VARCHAR},
      </if>
      <if test="contactId != null">
        contact_id = #{contactId,jdbcType=INTEGER},
      </if>
      <if test="contactPhone != null">
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="allotDate != null">
        allot_date = #{allotDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.crm.pojo.SaleOpportunity">
    update sale_opportunity
    set customer_id = #{customerId,jdbcType=INTEGER},
      `source` = #{source,jdbcType=VARCHAR},
      success = #{success,jdbcType=VARCHAR},
      `general` = #{general,jdbcType=VARCHAR},
      contact_id = #{contactId,jdbcType=INTEGER},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      manager_id = #{managerId,jdbcType=INTEGER},
      allot_date = #{allotDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR},
      delete_status = #{deleteStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>