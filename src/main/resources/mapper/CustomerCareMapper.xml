<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.crm.mapper.CustomerCareMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.crm.pojo.CustomerCare">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="linkman_id" jdbcType="INTEGER" property="linkmanId" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="feedback" jdbcType="VARCHAR" property="feedback" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, linkman_id, birthday, `time`, detail, `type`, `status`, feedback, create_time, 
    manager_id
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.crm.pojo.CustomerCareExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_care
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_care
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer_care
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.crm.pojo.CustomerCareExample">
    delete from customer_care
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.neuedu.crm.pojo.CustomerCare" useGeneratedKeys="true">
    insert into customer_care (linkman_id, birthday, `time`, 
      detail, `type`, `status`, 
      feedback, create_time, manager_id
      )
    values (#{linkmanId,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{time,jdbcType=TIMESTAMP}, 
      #{detail,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{feedback,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{managerId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.neuedu.crm.pojo.CustomerCare" useGeneratedKeys="true">
    insert into customer_care
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="linkmanId != null">
        linkman_id,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="feedback != null">
        feedback,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="linkmanId != null">
        #{linkmanId,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null">
        #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.crm.pojo.CustomerCareExample" resultType="java.lang.Long">
    select count(*) from customer_care
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer_care
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.linkmanId != null">
        linkman_id = #{record.linkmanId,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.feedback != null">
        feedback = #{record.feedback,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer_care
    set id = #{record.id,jdbcType=INTEGER},
      linkman_id = #{record.linkmanId,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      `time` = #{record.time,jdbcType=TIMESTAMP},
      detail = #{record.detail,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      feedback = #{record.feedback,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      manager_id = #{record.managerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.crm.pojo.CustomerCare">
    update customer_care
    <set>
      <if test="linkmanId != null">
        linkman_id = #{linkmanId,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null">
        feedback = #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.crm.pojo.CustomerCare">
    update customer_care
    set linkman_id = #{linkmanId,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      `time` = #{time,jdbcType=TIMESTAMP},
      detail = #{detail,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      feedback = #{feedback,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      manager_id = #{managerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>